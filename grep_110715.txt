-------------------------------------------------------------------------------
<예제 1>
KKK라는 파일 내용은 
aaa 
bbb 
ccc 
이고

HHH라는 파일 내용은
bbb
ccc 
이라고 했을때

grep -il bbb * 하면 
KKK
HHH
가 출력됩니다

질문은 grep -il bbb * 에서 aaa  내용이 있는 파일을 제외하고 싶습니다
어떻게 해야하죠?

grep -il bbb * | grep -v aaa 해봤습니다 
안됩니다.

아래 명령은 근본적인 해결이 될 수 없습니다.
grep -il bbb * | grep -v `grep -il aaa *`  

위 명령은 
aaa 문자열을 포함한 파일이 하나도 없을 경우에는
2번째 나오는 grep 명령이 인자(파일명)를 받지 못 해서 멈추게 됩니다.

aaa 문자열을 포함한 파일이 2개 이상 있을 경우에는
grep -v 명령이 의도한 대로 동작하지 않아 원하지 않은 결과를 출력하게 됩니다.
-----------------------------------------------
1) 쉘 명령어 조합
for filename in `grep -il bbb *`
do 
	if [ -z "`grep il aaa $filename`"]; then
		echo $filename
	fi
done	
-------------------------------------------------------------------------------
<예제 2> 하위 폴더 검색
1) grep xx *.c */*.c */*/*.c
현재 디렉토리 밑으로 1~2 디렉토리 정도만 되도 괜찮지만,
 몇단계 더 있는 경우에는 번거로울 수도 있기 때문에, 이럴 때는 find 와 같이 써주면 효과적일 수도 있습니다.

2) find . -name "*.c" -type f -exec grep xx {}\;
 현재 디렉토리 밑의 .c 파일이 너무 많은 경우에는 -exec 옵션 대신에 xargs 를 이용하시면 되구요.
 
 xargs - 명령행 인자 처리 명령 

3) find . -name "*.c" -type f | xargs grep xx {}\;
-------------------------------------------------------------------------------
<예제 3>
D:\DAESUNG\PAYDOS\DECT_DMP3000\SW\PRJ\Scorpion-4.5.0\vdsw-ftdcx79>grep -nHI TAD *.c
cds99wbv.c:173:                ps16_DspIn[DSBIX(100)]  = HPIN4;   /* ITAD */
cds99wbv.c:184:                ps16_DspIn[DSBIX(100)]  = HPIN4;   /* ITAD */

-n : 일치하는 라인의 결과와 그 파일에서의 결과 라인이 몇 번째 라인인지 보여준다.
-i : 대 소문자의 구별을 하지 않는다.
-l : 일치하는 라인의 파일명만 보여주고, 라인의 내용은 보여주지 않는다.
-------------------------------------------------------------------------------
<예제 4>
실습>1. root 폴더에 kwtest 폴더생성
     2. root에 있는 install.log 파일을 kwtest에 복사
     3. grep -r 옵션으로 filesystem 검색

     [root@Ltest20 ~]#mkdir kwtest
     [root@Ltest20 ~]#cp install.log kwtest
     [root@Ltest20 ~]#ls kwtest ----파일이 복사되었는지 확인
     [root@Ltest20 ~]#grep -r filesystem kwtest 

grep에서 사용되는 검색문자패턴 정규표현식

1. . : 아무 문자나 한 문자를 의미한다.
2. * : 어떤 문자열이나 문자길이에 무관한 문자열을 의미한다.
3. ^ : 행의 시작 위치를 의미한다.
4. $ : 행의 마지막 위치를 의미한다.
5. [ ] : 한 문자 길이의 패턴 리스트 의미한다.
6. [^ ] : 지정된 문자들 이외의 문자들을 의미한다. (^는 여집합을 의미)
7. \ : 뒤에 오는 문자를 문자 그대로 인식(특수문자를 표현하고자 할 때 사용한다.)
8. /< : 단어의 시작 위치를 의미한다.
9. /> : 단어의 마지막 위치를 의미한다.
-------------------------------------------------------------------------------
이번엔 파일 사이즈가 틀정 크기 이상인 파일을 찾습니다.
find . -size +xxxc

여기서 xxx 가 크기이고 c 는 단위가 1byte 입니다.
만약 안붙이면 기본단위가 512byte 가 됩니다.
물론 k (1024) 단위도 가능합니다


일단 수정은 안했어도 오늘 열어봤던 파일을 찾습니다.
root@boggle70-desktop:linux#  find . -atime 0

24 동안 access 한 파일을 찾습니다. 숫자는 24 시간 단위로 커집니다.
지난 2일 동안 access 한 파일을 찾고 싶다면 
root@boggle70-desktop:linux#  find . -atime -2    


동일하게 지난 24시간동안 수정한 파일을 찾고 싶다면 
root@boggle70-desktop:linux#  find . -mtime -1 

마지막으로 find 와 xargs 를 이용한 씰데없는 파일 지우기 입니다.
svn 이나 cvs 등으로 받은 파일을 외부로 보낼때 잡다한 것들은 찾아서 지우고 보내고 싶습니다.
root@boggle70-desktop:linux# find . -name .svn | xargs rm -rf 
하면 .svn 디렉토리는 싹다 찾아서 삭제해 줍니다

find  사용예
find . -name xxx.xxx : 이름찾기
find . -size +xxxc : 크기 찾기 
find . -atime 0 : 열어본 파일 찾기
find . -mtime -1 : 수정한 파일 찾기
find . -name .svn | xargs rm -rf : 원하는 파일만 지우기음악, IT·컴퓨터 태그저장  취소 네이버me 구독하기 
-------------------------------------------------------------------------------
현재 또는 하위 디렉토리에 있는  *.c  파일에  '12321' 이라는 문자가 들어간 것을 찾으려면 다음과 같이 하자나요..

find ./ -name '*.c' | xargs grep '12321'

궁금한 점은 이렇게 검색된 '12321' 을 '99999' 로 한번에 치환할 수 있는 방법이 있는가 입니다.
하나씩 vi 로 바꿔주다가 힘들어서 이렇게 질문 드려요.. ㅋㅋ

==>
이런 경우 sed를 써서 일괄적으로 변경하기는 불가능한 듯 합니다.

즉, find로 다수의 파일이 검색되었지만 각각의 파일마다 저장을 따로 해줘야하니깐요..


제 생각엔 한줄의 명령어로는 어려울 것 같고, 굳이 하시려면 셸스크립트를 만들어야 할 것 같습니다.

 for FILE in `find . -name "*.c" | xargs grep -l "12321"`
 do
        sed 's/12321/99999/g' $FILE > $FILE.new
        mv $FILE $FILE.old
        mv $FILE.new $FILE
        rm -f $FILE.old
 done
 

먼저 find . -name "*.c" | xargs grep -l "12321" 을 실행하여
12321이 들어가있는 .c 파일의 목록을 구합니다.
구한 결과를 for문으로 반복하여 파일 하나씩 sed로 문자열을 변경한 후 각각의 파일에 저장하는 것입니다.
-------------------------------------------------------------------------------
: 해당 문자열만 찾아서 출력하기
1)
"A.고객번호" 만 찾는 방법
find . -name \*.txt -print | xargs grep -n -w "A\.고객번호"

2)
A.고객번호
B.고객번호
C.고객번호
...
찾는 방법
find . -name \*.txt -print | xargs grep -n -w "[A-Z]\.고객번호"

3)
a.고객번호
A.고객번호
d.고객번호
...
찾는 방법
find . -name \*.txt -print | xargs grep -n -w "[A-Za-z]\.고객번호"
-------------------------------------------------------------------------------






























